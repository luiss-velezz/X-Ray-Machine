within XRay.Objects.Electrical;

//import XRay.Connectors.ThermalPin;

model DynamicResistor2
  extends Resistor;

  parameter Modelica.Units.SI.Length length(min=1e-9) = 0.01; // 10 mm
  parameter Modelica.Units.SI.Radius radius(min=1e-6) = 0.001; // 1 mm
  parameter Modelica.Units.SI.Resistivity rho_ref = 5.6e-8; // Ω·m
  parameter Modelica.Units.SI.Temperature T_ref(min=273.15) = 273.15 "Reference temperature (K)";
  parameter Real alpha = 0.004 "Temperature coefficient of resistivity (1/K)";
  parameter Modelica.Units.SI.Mass mass = 0.001; // 1 gram
  parameter Modelica.Units.SI.SpecificHeatCapacity specificHeatCapacity = 134; // J/(kg·K) for tungsten
  parameter Modelica.Units.SI.CoefficientOfHeatTransfer heatTransferCoefficient = 50; // W/(m^2·K)

  Modelica.Units.SI.Temperature T "Resistor temperature";
  Modelica.Units.SI.Resistance R_actual "Actual resistance (Ω)";
  Modelica.Units.SI.Power P_elec "Power generated by heating (W)";

  // Thermal connector
  Connectors.ThermalPin thermalPort;

  // Calculate cross-sectional area of the cylinder
  Modelica.Units.SI.Area crossSectionalArea = Modelica.Constants.pi * radius^2 "Cross-sectional area of the cylindrical resistor";

  // Calculate reference resistance at T_ref
  Modelica.Units.SI.Resistance R_ref = (rho_ref * length) / crossSectionalArea "Reference resistance at T_ref";

equation
  // Joule effect heat
  P_elec = v * i;

  // Dynamically adjust resistance based on temperature
  R_actual = R_ref * (1 + alpha * (T - T_ref));

  // Override the resistance parameter with the actual temperature-dependent resistance
  R = R_actual;

  // Heat balance equation
  mass * specificHeatCapacity * der(T) = P_elec - heatTransferCoefficient * crossSectionalArea * T;

  // Assign thermal connector variables
  thermalPort.T = T;
  thermalPort.Q_dot = P_elec;

  // Initial temperature
  initial equation
    T = T_ref;

end DynamicResistor2;
