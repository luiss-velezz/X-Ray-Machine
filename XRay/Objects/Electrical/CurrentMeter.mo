within XRay.Objects.Electrical;

model CurrentMeter

  // Parameters
  parameter Modelica.Units.SI.Resistance R(min=0)=0.1 "Resistance at temperature T_ref";
  parameter Modelica.Units.SI.Temperature T_ref(min=0)=300.15 "Reference temperature";
  parameter Modelica.Units.SI.LinearTemperatureCoefficient alpha(min=0)=5e-6
    "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
  parameter Real CathodeReferenceTemperature(min=0)=300.15 "Cathode's reference temperature";
  parameter Real CathodeReferenceResistance(min=0)=5 "Cathode's reference resistance";
  parameter Real CathodeTempCoeff(min=0)=0.0045;
  
  //Variables
  Resistor2 PrecisionResistor(
    R=R, 
    T_ref=T_ref, 
    alpha=alpha
  ) annotation(  
    Placement(transformation(origin = {0, 2}, extent = {{-10, -10}, {10, 10}}, rotation = -90)));
  Real V;
  Real I;
  Modelica.Units.SI.Temperature auxTemp;
 
  // Ports
  Ports.PositivePin p annotation(
    Placement(transformation(origin = {-2, 98}, extent = {{-10, -10}, {10, 10}}), iconTransformation(origin = {-2, 98}, extent = {{-10, -10}, {10, 10}})));
  Ports.NegativePin n annotation(
    Placement(transformation(origin = {0, -100}, extent = {{-10, -10}, {10, 10}}), iconTransformation(origin = {0, -100}, extent = {{-10, -10}, {10, 10}})));
  Ports.ThermalPin_1 controlledTemperature annotation(
    Placement(transformation(origin = {100, 0}, extent = {{-10, -10}, {10, 10}}), iconTransformation(origin = {50, -64}, extent = {{-10, -10}, {10, 10}})));
  Logic.RealOutput CalculatedTemperature annotation(
    Placement(transformation(origin = {98, 52}, extent = {{-10, -10}, {10, 10}}), iconTransformation(origin = {195, 67}, extent = {{-15, -15}, {15, 15}})));
equation

  V = n.v;
  I = (p.v - n.v)/R;
  
  V = CathodeReferenceResistance*(1 + CathodeTempCoeff*(CalculatedTemperature - CathodeReferenceTemperature))*I;

//  auxTemp = CathodeReferenceTemperature + ((V / (I * CathodeReferenceResistance)) - 1) / CathodeTempCoeff;
  CalculatedTemperature = auxTemp;

  connect(PrecisionResistor.port_a, controlledTemperature) annotation(
    Line(points = {{4, 2}, {100, 2}, {100, 0}}, color = {191, 0, 0}));
  connect(n, PrecisionResistor.n) annotation(
    Line(points = {{0, -100}, {0, -8}}, color = {0, 0, 255}));
  connect(PrecisionResistor.p, p) annotation(
    Line(points = {{0, 12}, {-2, 12}, {-2, 98}}, color = {0, 0, 255}));
annotation(
    Icon(graphics = {Line(points = {{-40, 100}, {-40, -100}, {40, -100}, {40, 100}, {-40, 100}, {-40, 100}}, pattern = LinePattern.DashDotDot, thickness = 1.5), Ellipse(origin = {1, 0}, lineThickness = 2.5, extent = {{-45, 44}, {45, -44}}), Text(origin = {8, -2}, rotation = -90, extent = {{-22, 32}, {22, -32}}, textString = "A"), Rectangle(origin = {96, 67}, rotation = -90, lineColor = {170, 255, 255}, fillColor = {0, 255, 255}, fillPattern = FillPattern.VerticalCylinder, extent = {{-10, 59}, {10, -59}}), Rectangle(origin = {78, 66}, rotation = -90, lineColor = {0, 255, 255}, fillColor = {255, 0, 0}, fillPattern = FillPattern.VerticalCylinder, extent = {{-4, -40}, {4, 40}}), Ellipse(origin = {156, 67}, rotation = -90, fillColor = {180, 180, 180}, fillPattern = FillPattern.Solid, extent = {{-36, 35}, {36, -35}}), Rectangle(origin = {156, 67}, rotation = -90, fillColor = {0, 255, 127}, fillPattern = FillPattern.Solid, extent = {{-24, 21}, {24, -21}}), Text(origin = {154, 68}, rotation = -90, extent = {{-32, 50}, {32, -50}}, textString = "%Temperature K")}),
 experiment(StartTime = 0, StopTime = 1, Tolerance = 1e-06, Interval = 0.002),
 Documentation(info = "<html><head></head><body><!--StartFragment--><p><strong>Overview</strong><br>The <em>CurrentMeter</em> model is designed to measure the electrical current flowing through a temperature-dependent resistor and, based on the voltage drop across that resistor, infer the operating temperature of a cathode element. The model integrates a precision resistor (implemented as an instance of a temperature-dependent resistor, <em>Resistor2</em>) to simulate how the resistance changes with temperature. Using the measured voltage and current, it aims to calculate an estimated temperature (output as <em>CalculatedTemperature</em>) that reflects the thermal state of the cathode.</p><hr><p><strong>Key Concepts and Equations</strong></p><ol><li><strong>Current Measurement</strong><ul><li><strong>Voltage and Current Relation:</strong><br>The model initially defines:<pre class=\"!overflow-visible\"><div class=\"contain-inline-size rounded-md border-[0.5px] border-token-border-medium relative bg-token-sidebar-surface-primary dark:bg-gray-950\"><div class=\"overflow-y-auto p-4\" dir=\"ltr\"><code class=\"!whitespace-pre\"><span class=\"hljs-attr\">V</span> = n.v<span class=\"hljs-comment\">;</span>
<span class=\"hljs-attr\">I</span> = (p.v - n.v) / R<span class=\"hljs-comment\">;</span>
</code></div></div></pre>where:<ul><li><em>p.v</em> and <em>n.v</em> are the voltages at the positive and negative electrical pins.</li><li><em>R</em> is the nominal resistance (a parameter) used for the initial current calculation.</li></ul></li></ul></li><li><strong>Temperature-Dependent Resistance</strong><ul><li><strong>Adjusted Voltage Drop:</strong><br>The voltage drop across the cathode is modeled as:<pre class=\"!overflow-visible\"><div class=\"contain-inline-size rounded-md border-[0.5px] border-token-border-medium relative bg-token-sidebar-surface-primary dark:bg-gray-950\"><div class=\"overflow-y-auto p-4\" dir=\"ltr\"><code class=\"!whitespace-pre\"><span class=\"hljs-attr\">V</span> = CathodeReferenceResistance * (<span class=\"hljs-number\">1</span> + CathodeTempCoeff * (CalculatedTemperature - CathodeReferenceTemperature)) * I<span class=\"hljs-comment\">;</span>
</code></div></div></pre>This equation represents the temperature-dependent behavior of the cathode’s resistance. Here:<ul><li><em>CathodeReferenceResistance</em> is the resistance at the reference temperature.</li><li><em>CathodeTempCoeff</em> is the temperature coefficient describing how the resistance changes with temperature.</li><li><em>CathodeReferenceTemperature</em> is the reference temperature.</li><li><em>CalculatedTemperature</em> is the inferred temperature that the model intends to compute.</li></ul></li></ul></li><li><strong>Temperature Calculation</strong><ul><li><strong>Intended Temperature Estimation:</strong><br>An expression for computing the inferred temperature is provided in a commented line:<pre class=\"!overflow-visible\"><div class=\"contain-inline-size rounded-md border-[0.5px] border-token-border-medium relative bg-token-sidebar-surface-primary dark:bg-gray-950\"><div class=\"overflow-y-auto p-4\" dir=\"ltr\"><code class=\"!whitespace-pre\"><span class=\"hljs-comment\">auxTemp = CathodeReferenceTemperature + ((V / (I * CathodeReferenceResistance)) - 1) / CathodeTempCoeff;</span>
</code></div></div></pre>Although currently commented out, this equation suggests that the temperature could be calculated from the measured voltage and current. In the model, the variable <em>auxTemp</em> is meant to hold the inferred temperature, which is then assigned to the output:<pre class=\"!overflow-visible\"><div class=\"contain-inline-size rounded-md border-[0.5px] border-token-border-medium relative bg-token-sidebar-surface-primary dark:bg-gray-950\"><div class=\"overflow-y-auto p-4\" dir=\"ltr\"><code class=\"!whitespace-pre\"><span class=\"hljs-attr\">CalculatedTemperature</span> = auxTemp<span class=\"hljs-comment\">;</span>
</code></div></div></pre><em>Note:</em> Since the temperature calculation is not active (the equation is commented), users may need to adjust or uncomment this equation to obtain a meaningful temperature estimate.</li></ul></li></ol><hr><p><strong>Model Parameters</strong></p><ul><li><p><strong>R (Resistance):</strong><br>Nominal resistance (in ohms) at the reference temperature used for initial current measurement.</p></li><li><p><strong>T_ref (Temperature):</strong><br>Reference temperature (in Kelvin) associated with the nominal resistor parameters.</p></li><li><p><strong>alpha (Linear Temperature Coefficient):</strong><br>Coefficient used by the <em>PrecisionResistor</em> component to model its temperature-dependent resistance:</p><pre class=\"!overflow-visible\"><div class=\"contain-inline-size rounded-md border-[0.5px] border-token-border-medium relative bg-token-sidebar-surface-primary dark:bg-gray-950\"><div class=\"overflow-y-auto p-4\" dir=\"ltr\"><code class=\"!whitespace-pre\"><span class=\"hljs-attr\">R_actual</span> = R * (<span class=\"hljs-number\">1</span> + alpha * (T_heatPort - T_ref))
</code></div></div></pre></li><li><p><strong>CathodeReferenceTemperature:</strong><br>The temperature (in Kelvin) at which the cathode’s reference resistance is defined.</p></li><li><p><strong>CathodeReferenceResistance:</strong><br>The resistance value (in ohms) of the cathode at the reference temperature.</p></li><li><p><strong>CathodeTempCoeff:</strong><br>The temperature coefficient (in 1/K) that describes how the cathode’s resistance changes with temperature:</p><pre class=\"!overflow-visible\"><div class=\"contain-inline-size rounded-md border-[0.5px] border-token-border-medium relative bg-token-sidebar-surface-primary dark:bg-gray-950\"><div class=\"overflow-y-auto p-4\" dir=\"ltr\"><code class=\"!whitespace-pre\"><span class=\"hljs-type\">Adjusted</span> <span class=\"hljs-variable\">Resistance</span> <span class=\"hljs-operator\">=</span> CathodeReferenceResistance * (<span class=\"hljs-number\">1</span> + CathodeTempCoeff * (CalculatedTemperature - CathodeReferenceTemperature))
</code></div></div></pre></li></ul><hr><p><strong>Variables and Sub-Components</strong></p><ul><li><p><strong>PrecisionResistor (Resistor2):</strong><br>A sub-model instance that simulates the temperature-dependent behavior of a resistor using parameters <em>R</em>, <em>T_ref</em>, and <em>alpha</em>.</p></li><li><p><strong>V (Voltage):</strong><br>Represents the voltage measured (initially taken from <em>n.v</em> and later redefined by the temperature-dependent equation).</p></li><li><p><strong>I (Current):</strong><br>The electrical current computed from the voltage difference and the nominal resistance:</p><pre class=\"!overflow-visible\"><div class=\"contain-inline-size rounded-md border-[0.5px] border-token-border-medium relative bg-token-sidebar-surface-primary dark:bg-gray-950\"><div class=\"overflow-y-auto p-4\" dir=\"ltr\"><code class=\"!whitespace-pre\"><span class=\"hljs-attr\">I</span> = (p.v - n.v) / R<span class=\"hljs-comment\">;</span>
</code></div></div></pre></li><li><p><strong>auxTemp (Auxiliary Temperature):</strong><br>Intended to store the calculated temperature value. It is then assigned to <em>CalculatedTemperature</em>.</p></li><li><p><strong>CalculatedTemperature (Output):</strong><br>The inferred temperature of the cathode, provided as a real-valued output (in Kelvin).</p></li></ul><hr><p><strong>Ports</strong></p><ul><li><p><strong>PositivePin (p):</strong><br>Electrical port representing the positive side of the circuit.</p></li><li><p><strong>NegativePin (n):</strong><br>Electrical port representing the negative side of the circuit.</p></li><li><p><strong>controlledTemperature (ThermalPin_1):</strong><br>Thermal port connected to the <em>PrecisionResistor</em> to provide its temperature environment.</p></li><li><p><strong>CalculatedTemperature (Logic.RealOutput):</strong><br>Output port that provides the inferred temperature based on the measured electrical parameters.</p></li></ul><hr><p><strong>Usage Notes</strong></p><ul><li><p><strong>Integration in Systems:</strong><br>The <em>CurrentMeter</em> model is intended for applications where both current measurement and temperature inference of a cathode are required. It can be integrated into larger electrical and thermal networks.</p></li><li><p><strong>Temperature Estimation Equation:</strong><br>The commented-out temperature calculation suggests a method to compute the inferred temperature. Users should review and, if necessary, activate or adjust this equation to suit their simulation needs.</p></li><li><p><strong>Parameter Tuning:</strong><br>Adjust the parameters (<em>R</em>, <em>T_ref</em>, <em>alpha</em>, <em>CathodeReferenceTemperature</em>, <em>CathodeReferenceResistance</em>, <em>CathodeTempCoeff</em>) to match the characteristics of the physical system being modeled.</p></li><li><p><strong>Electrical Connections:</strong><br>Ensure that the electrical pins and the thermal port are correctly connected within the overall circuit to obtain accurate current and temperature measurements.</p></li></ul><!--EndFragment--></body></html>"));
end CurrentMeter;
